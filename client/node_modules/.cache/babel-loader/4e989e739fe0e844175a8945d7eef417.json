{"ast":null,"code":"var _jsxFileName = \"/Volumes/  Disco Externo/DEVS/personalProjects/portfolio/client/src/components/Contact/Contact.js\";\nimport React from \"react\";\nimport Axios from \"axios\";\nimport { useFormik } from \"formik\";\nimport useForm from \"../../hooks/useForm\";\nimport Background from \"../Background/Background\";\nimport LogoContact from \"../LogoContact/LogoContact\";\nimport linkedin from \"../../images/Contact/Linkedin.png\";\nimport github from \"../../images/backgroundCode/github.png\";\nimport twitter from \"../../images/Contact/Twitter.png\";\nimport SocialContactLogo from \"../SocialContactLogo/SocialContactLogo\";\nconst socialContact = [{\n  name: \"linkedin\",\n  image: linkedin,\n  source: \"https://www.linkedin.com/in/manufernandezfreire/\"\n}, {\n  name: \"Git Hub\",\n  image: github,\n  source: \"https://github.com/mfernandezfreire\"\n}, {\n  name: \"Twitter\",\n  image: twitter,\n  source: \"https://twitter.com/manuferfreire\"\n}]; //Formiks Validate Form's\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.subject) {\n    errors.subject = \"Required\";\n  } else if (values.subject.length > 15) {\n    errors.subject = \"Must be 15 characters or less\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  if (!values.message) {\n    errors.message = \"Required\";\n  } else if (values.message.length > 20) {\n    errors.message = \"Must be 20 characters or less\";\n  }\n\n  return errors;\n};\n\nconst Contact = () => {\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      subject: \"\",\n      message: \"\"\n    },\n    validate,\n    onSubmit: values => {\n      const email = values.email;\n      const subject = values.subject;\n      const message = values.message;\n      Axios.post(`http://localhost:4000/send-email`, {\n        email,\n        subject,\n        message\n      }).then(_ => {\n        resetState();\n        console.log(\"everything it's ok\");\n      }).catch(error => console.log(\"Nothing it's ok\"));\n      resetState();\n    }\n  }); // const [state, handleState, resetState] = useForm({\n  //   email: \"\",\n  //   subject: \"\",\n  //   message: \"\",\n  // });\n  // const handleSubmit = (e) => {\n  //   const email = state.email;\n  //   const subject = state.subject;\n  //   const message = state.message;\n  //   e.preventDefault();\n  //   Axios.post(`http://localhost:4000/send-email`, { email, subject, message })\n  //     .then((_) => {\n  //       resetState();\n  //       console.log(\"everything it's ok\");\n  //     })\n  //     .catch((error) => console.log(\"Nothing it's ok\"));\n  //   resetState();\n  // };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Contact container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Background, {\n    type: \"contact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-4 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"Contacta Conmigo\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LogoContact, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-9 col-sm-3 mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"emailDeContacto\",\n    className: \"h5 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, \"Email de Contacto\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"emailDeContacto\",\n    name: \"email\",\n    type: \"email\",\n    onChange: formik.handleChange,\n    value: formik.values.email,\n    className: \"form-control border-0\",\n    style: {\n      background: \"gainsboro\",\n      color: \"black\"\n    },\n    placeholder: \"name@ejemplo.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }), formik.errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 38\n    }\n  }, formik.errors.email) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-secondary btn-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, \"Enviar\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, socialContact.map(social => /*#__PURE__*/React.createElement(SocialContactLogo, {\n    name: social.name,\n    image: social.image,\n    source: social.source,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center mb-0\",\n    style: {\n      fontSize: \"1.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, \"Manuel Fernandez Freire \\xA9\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center\",\n    style: {\n      fontSize: \"1.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, \"2020\"))));\n};\n\nexport default Contact;","map":{"version":3,"sources":["/Volumes/  Disco Externo/DEVS/personalProjects/portfolio/client/src/components/Contact/Contact.js"],"names":["React","Axios","useFormik","useForm","Background","LogoContact","linkedin","github","twitter","SocialContactLogo","socialContact","name","image","source","validate","values","errors","subject","length","email","test","message","Contact","formik","initialValues","onSubmit","post","then","_","resetState","console","log","catch","error","handleSubmit","handleChange","background","color","map","social","fontSize"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Axios from \"axios\";\nimport { useFormik } from \"formik\";\n\nimport useForm from \"../../hooks/useForm\";\n\nimport Background from \"../Background/Background\";\nimport LogoContact from \"../LogoContact/LogoContact\";\n\nimport linkedin from \"../../images/Contact/Linkedin.png\";\nimport github from \"../../images/backgroundCode/github.png\";\nimport twitter from \"../../images/Contact/Twitter.png\";\nimport SocialContactLogo from \"../SocialContactLogo/SocialContactLogo\";\n\nconst socialContact = [\n  {\n    name: \"linkedin\",\n    image: linkedin,\n    source: \"https://www.linkedin.com/in/manufernandezfreire/\",\n  },\n  {\n    name: \"Git Hub\",\n    image: github,\n    source: \"https://github.com/mfernandezfreire\",\n  },\n  {\n    name: \"Twitter\",\n    image: twitter,\n    source: \"https://twitter.com/manuferfreire\",\n  },\n];\n\n//Formiks Validate Form's\nconst validate = (values) => {\n  const errors = {};\n  if (!values.subject) {\n    errors.subject = \"Required\";\n  } else if (values.subject.length > 15) {\n    errors.subject = \"Must be 15 characters or less\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  if (!values.message) {\n    errors.message = \"Required\";\n  } else if (values.message.length > 20) {\n    errors.message = \"Must be 20 characters or less\";\n  }\n\n  return errors;\n};\n\nconst Contact = () => {\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      subject: \"\",\n      message: \"\",\n    },\n    validate,\n    onSubmit: (values) => {\n      const email = values.email;\n      const subject = values.subject;\n      const message = values.message;\n      Axios.post(`http://localhost:4000/send-email`, {\n        email,\n        subject,\n        message,\n      })\n        .then((_) => {\n          resetState();\n          console.log(\"everything it's ok\");\n        })\n        .catch((error) => console.log(\"Nothing it's ok\"));\n      resetState();\n    },\n  });\n\n  // const [state, handleState, resetState] = useForm({\n  //   email: \"\",\n  //   subject: \"\",\n  //   message: \"\",\n  // });\n\n  // const handleSubmit = (e) => {\n  //   const email = state.email;\n  //   const subject = state.subject;\n  //   const message = state.message;\n  //   e.preventDefault();\n  //   Axios.post(`http://localhost:4000/send-email`, { email, subject, message })\n  //     .then((_) => {\n  //       resetState();\n  //       console.log(\"everything it's ok\");\n  //     })\n  //     .catch((error) => console.log(\"Nothing it's ok\"));\n  //   resetState();\n  // };\n\n  return (\n    <div className=\"Contact container-fluid\">\n      <Background type={\"contact\"} />\n      <h1 className=\"display-4 text-center\">Contacta Conmigo</h1>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-6 mb-5\">\n          <LogoContact />\n        </div>\n      </div>\n      <form onSubmit={formik.handleSubmit}>\n        <div className=\"row justify-content-center mb-5\">\n          <div className=\"col-9 col-sm-3 mr-2\">\n            <div className=\"form-group\">\n              <label htmlFor=\"emailDeContacto\" className=\"h5 mb-3\">\n                Email de Contacto\n              </label>\n              <input\n                id=\"emailDeContacto\"\n                name=\"email\"\n                type=\"email\"\n                onChange={formik.handleChange}\n                value={formik.values.email}\n                className=\"form-control border-0\"\n                style={{ background: \"gainsboro\", color: \"black\" }}\n                placeholder=\"name@ejemplo.com\"\n              />\n              {formik.errors.email ? <div>{formik.errors.email}</div> : null}\n            </div>\n            {/* <div className=\"form-group\">\n              <label for=\"asunto\" className=\"h5 mb-3\">\n                Asunto\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control border-0\"\n                style={{ background: \"gainsboro\", color: \"black\" }}\n                id=\"asunto\"\n                placeholder=\"Asunto\"\n                name=\"subject\"\n                value={state.subject}\n                onChange={handleState}\n              />\n            </div>\n          </div>\n          <div className=\"col-9 col-sm-3 ml-2\">\n            <div className=\"form-group\">\n              <label for=\"Mensaje\" className=\"h5 mb-3\">\n                Mensaje\n              </label>\n              <textarea\n                className=\"form-control border-0\"\n                style={{ background: \"gainsboro\", color: \"black\" }}\n                rows=\"5\"\n                id=\"Mensaje\"\n                name=\"message\"\n                value={state.message}\n                onChange={handleState}\n              ></textarea>\n            </div> */}\n          </div>\n          <div className=\"col-12 text-center\">\n            <button type=\"submit\" className=\"btn btn-secondary btn-lg\">\n              Enviar\n            </button>\n          </div>\n        </div>\n      </form>\n      <div className=\"row justify-content-center\">\n        {socialContact.map((social) => (\n          <SocialContactLogo\n            name={social.name}\n            image={social.image}\n            source={social.source}\n          />\n        ))}\n      </div>\n      <div className=\"row mt-5\">\n        <div className=\"col-12\">\n          <p className=\"text-center mb-0\" style={{ fontSize: \"1.5rem\" }}>\n            Manuel Fernandez Freire ©\n          </p>\n          <p className=\"text-center\" style={{ fontSize: \"1.5rem\" }}>\n            2020\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}