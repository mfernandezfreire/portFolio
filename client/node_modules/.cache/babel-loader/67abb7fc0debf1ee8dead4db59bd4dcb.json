{"ast":null,"code":"/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar clamp = function (min, max) {\n  return function (v) {\n    return Math.max(Math.min(v, max), min);\n  };\n};\n\nvar sanitize = function (v) {\n  return v % 1 ? Number(v.toFixed(5)) : v;\n};\n\nvar floatRegex = /(-)?(\\d[\\d\\.]*)/g;\nvar colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))/gi;\nvar singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$/i;\nvar number = {\n  test: function (v) {\n    return typeof v === 'number';\n  },\n  parse: parseFloat,\n  transform: function (v) {\n    return v;\n  }\n};\n\nvar alpha = __assign(__assign({}, number), {\n  transform: clamp(0, 1)\n});\n\nvar scale = __assign(__assign({}, number), {\n  default: 1\n});\n\nvar createUnitType = function (unit) {\n  return {\n    test: function (v) {\n      return typeof v === 'string' && v.endsWith(unit) && v.split(' ').length === 1;\n    },\n    parse: parseFloat,\n    transform: function (v) {\n      return \"\" + v + unit;\n    }\n  };\n};\n\nvar degrees = createUnitType('deg');\nvar percent = createUnitType('%');\nvar px = createUnitType('px');\nvar vh = createUnitType('vh');\nvar vw = createUnitType('vw');\n\nvar progressPercentage = __assign(__assign({}, percent), {\n  parse: function (v) {\n    return percent.parse(v) / 100;\n  },\n  transform: function (v) {\n    return percent.transform(v * 100);\n  }\n});\n\nvar getValueFromFunctionString = function (value) {\n  return value.substring(value.indexOf('(') + 1, value.lastIndexOf(')'));\n};\n\nvar clampRgbUnit = clamp(0, 255);\n\nvar isRgba = function (v) {\n  return v.red !== undefined;\n};\n\nvar isHsla = function (v) {\n  return v.hue !== undefined;\n};\n\nvar splitColorValues = function (terms) {\n  return function (v) {\n    if (typeof v !== 'string') return v;\n    var values = {};\n    var valuesArray = getValueFromFunctionString(v).split(/,\\s*/);\n\n    for (var i = 0; i < 4; i++) {\n      values[terms[i]] = valuesArray[i] !== undefined ? parseFloat(valuesArray[i]) : 1;\n    }\n\n    return values;\n  };\n};\n\nvar rgbaTemplate = function (_a) {\n  var red = _a.red,\n      green = _a.green,\n      blue = _a.blue,\n      _b = _a.alpha,\n      alpha$$1 = _b === void 0 ? 1 : _b;\n  return \"rgba(\" + red + \", \" + green + \", \" + blue + \", \" + alpha$$1 + \")\";\n};\n\nvar hslaTemplate = function (_a) {\n  var hue = _a.hue,\n      saturation = _a.saturation,\n      lightness = _a.lightness,\n      _b = _a.alpha,\n      alpha$$1 = _b === void 0 ? 1 : _b;\n  return \"hsla(\" + hue + \", \" + saturation + \", \" + lightness + \", \" + alpha$$1 + \")\";\n};\n\nvar rgbUnit = __assign(__assign({}, number), {\n  transform: function (v) {\n    return Math.round(clampRgbUnit(v));\n  }\n});\n\nfunction isColorString(color, colorType) {\n  return color.startsWith(colorType) && singleColorRegex.test(color);\n}\n\nvar rgba = {\n  test: function (v) {\n    return typeof v === 'string' ? isColorString(v, 'rgb') : isRgba(v);\n  },\n  parse: splitColorValues(['red', 'green', 'blue', 'alpha']),\n  transform: function (_a) {\n    var red = _a.red,\n        green = _a.green,\n        blue = _a.blue,\n        _b = _a.alpha,\n        alpha$$1 = _b === void 0 ? 1 : _b;\n    return rgbaTemplate({\n      red: rgbUnit.transform(red),\n      green: rgbUnit.transform(green),\n      blue: rgbUnit.transform(blue),\n      alpha: sanitize(alpha.transform(alpha$$1))\n    });\n  }\n};\nvar hsla = {\n  test: function (v) {\n    return typeof v === 'string' ? isColorString(v, 'hsl') : isHsla(v);\n  },\n  parse: splitColorValues(['hue', 'saturation', 'lightness', 'alpha']),\n  transform: function (_a) {\n    var hue = _a.hue,\n        saturation = _a.saturation,\n        lightness = _a.lightness,\n        _b = _a.alpha,\n        alpha$$1 = _b === void 0 ? 1 : _b;\n    return hslaTemplate({\n      hue: Math.round(hue),\n      saturation: percent.transform(sanitize(saturation)),\n      lightness: percent.transform(sanitize(lightness)),\n      alpha: sanitize(alpha.transform(alpha$$1))\n    });\n  }\n};\n\nvar hex = __assign(__assign({}, rgba), {\n  test: function (v) {\n    return typeof v === 'string' && isColorString(v, '#');\n  },\n  parse: function (v) {\n    var r = '';\n    var g = '';\n    var b = '';\n\n    if (v.length > 4) {\n      r = v.substr(1, 2);\n      g = v.substr(3, 2);\n      b = v.substr(5, 2);\n    } else {\n      r = v.substr(1, 1);\n      g = v.substr(2, 1);\n      b = v.substr(3, 1);\n      r += r;\n      g += g;\n      b += b;\n    }\n\n    return {\n      red: parseInt(r, 16),\n      green: parseInt(g, 16),\n      blue: parseInt(b, 16),\n      alpha: 1\n    };\n  }\n});\n\nvar color = {\n  test: function (v) {\n    return typeof v === 'string' && singleColorRegex.test(v) || isRgba(v) || isHsla(v);\n  },\n  parse: function (v) {\n    if (rgba.test(v)) {\n      return rgba.parse(v);\n    } else if (hsla.test(v)) {\n      return hsla.parse(v);\n    } else if (hex.test(v)) {\n      return hex.parse(v);\n    }\n\n    return v;\n  },\n  transform: function (v) {\n    if (isRgba(v)) {\n      return rgba.transform(v);\n    } else if (isHsla(v)) {\n      return hsla.transform(v);\n    }\n\n    return v;\n  }\n};\nvar COLOR_TOKEN = '${c}';\nvar NUMBER_TOKEN = '${n}';\n\nvar convertNumbersToZero = function (v) {\n  return typeof v === 'number' ? 0 : v;\n};\n\nvar complex = {\n  test: function (v) {\n    if (typeof v !== 'string' || !isNaN(v)) return false;\n    var numValues = 0;\n    var foundNumbers = v.match(floatRegex);\n    var foundColors = v.match(colorRegex);\n    if (foundNumbers) numValues += foundNumbers.length;\n    if (foundColors) numValues += foundColors.length;\n    return numValues > 0;\n  },\n  parse: function (v) {\n    var input = v;\n    var parsed = [];\n    var foundColors = input.match(colorRegex);\n\n    if (foundColors) {\n      input = input.replace(colorRegex, COLOR_TOKEN);\n      parsed.push.apply(parsed, foundColors.map(color.parse));\n    }\n\n    var foundNumbers = input.match(floatRegex);\n\n    if (foundNumbers) {\n      parsed.push.apply(parsed, foundNumbers.map(number.parse));\n    }\n\n    return parsed;\n  },\n  createTransformer: function (prop) {\n    var template = prop;\n    var token = 0;\n    var foundColors = prop.match(colorRegex);\n    var numColors = foundColors ? foundColors.length : 0;\n\n    if (foundColors) {\n      for (var i = 0; i < numColors; i++) {\n        template = template.replace(foundColors[i], COLOR_TOKEN);\n        token++;\n      }\n    }\n\n    var foundNumbers = template.match(floatRegex);\n    var numNumbers = foundNumbers ? foundNumbers.length : 0;\n\n    if (foundNumbers) {\n      for (var i = 0; i < numNumbers; i++) {\n        template = template.replace(foundNumbers[i], NUMBER_TOKEN);\n        token++;\n      }\n    }\n\n    return function (v) {\n      var output = template;\n\n      for (var i = 0; i < token; i++) {\n        output = output.replace(i < numColors ? COLOR_TOKEN : NUMBER_TOKEN, i < numColors ? color.transform(v[i]) : sanitize(v[i]));\n      }\n\n      return output;\n    };\n  },\n  getAnimatableNone: function (target) {\n    var parsedTarget = complex.parse(target);\n    var targetTransformer = complex.createTransformer(target);\n    return targetTransformer(parsedTarget.map(convertNumbersToZero));\n  }\n};\nexport { number, scale, alpha, degrees, percent, progressPercentage, px, vw, vh, rgba, rgbUnit, hsla, hex, color, complex };","map":{"version":3,"sources":["/Volumes/  Disco Externo/personalProjects/portfolio/node_modules/style-value-types/dist/style-value-types.es.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","clamp","min","max","v","Math","sanitize","Number","toFixed","floatRegex","colorRegex","singleColorRegex","number","test","parse","parseFloat","transform","alpha","scale","default","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","getValueFromFunctionString","value","substring","indexOf","lastIndexOf","clampRgbUnit","isRgba","red","undefined","isHsla","hue","splitColorValues","terms","values","valuesArray","rgbaTemplate","_a","green","blue","_b","alpha$$1","hslaTemplate","saturation","lightness","rgbUnit","round","isColorString","color","colorType","startsWith","rgba","hsla","hex","r","g","b","substr","parseInt","COLOR_TOKEN","NUMBER_TOKEN","convertNumbersToZero","complex","isNaN","numValues","foundNumbers","match","foundColors","input","parsed","replace","push","map","createTransformer","prop","template","token","numColors","numNumbers","output","getAnimatableNone","target","parsedTarget","targetTransformer"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar clamp = function (min, max) { return function (v) {\r\n    return Math.max(Math.min(v, max), min);\r\n}; };\r\nvar sanitize = function (v) { return (v % 1 ? Number(v.toFixed(5)) : v); };\r\nvar floatRegex = /(-)?(\\d[\\d\\.]*)/g;\r\nvar colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))/gi;\r\nvar singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))$/i;\n\nvar number = {\r\n    test: function (v) { return typeof v === 'number'; },\r\n    parse: parseFloat,\r\n    transform: function (v) { return v; }\r\n};\r\nvar alpha = __assign(__assign({}, number), { transform: clamp(0, 1) });\r\nvar scale = __assign(__assign({}, number), { default: 1 });\n\nvar createUnitType = function (unit) { return ({\r\n    test: function (v) {\r\n        return typeof v === 'string' && v.endsWith(unit) && v.split(' ').length === 1;\r\n    },\r\n    parse: parseFloat,\r\n    transform: function (v) { return \"\" + v + unit; }\r\n}); };\r\nvar degrees = createUnitType('deg');\r\nvar percent = createUnitType('%');\r\nvar px = createUnitType('px');\r\nvar vh = createUnitType('vh');\r\nvar vw = createUnitType('vw');\r\nvar progressPercentage = __assign(__assign({}, percent), { parse: function (v) { return percent.parse(v) / 100; }, transform: function (v) { return percent.transform(v * 100); } });\n\nvar getValueFromFunctionString = function (value) {\r\n    return value.substring(value.indexOf('(') + 1, value.lastIndexOf(')'));\r\n};\r\nvar clampRgbUnit = clamp(0, 255);\r\nvar isRgba = function (v) { return v.red !== undefined; };\r\nvar isHsla = function (v) { return v.hue !== undefined; };\r\nvar splitColorValues = function (terms) {\r\n    return function (v) {\r\n        if (typeof v !== 'string')\r\n            return v;\r\n        var values = {};\r\n        var valuesArray = getValueFromFunctionString(v).split(/,\\s*/);\r\n        for (var i = 0; i < 4; i++) {\r\n            values[terms[i]] =\r\n                valuesArray[i] !== undefined ? parseFloat(valuesArray[i]) : 1;\r\n        }\r\n        return values;\r\n    };\r\n};\r\nvar rgbaTemplate = function (_a) {\r\n    var red = _a.red, green = _a.green, blue = _a.blue, _b = _a.alpha, alpha$$1 = _b === void 0 ? 1 : _b;\r\n    return \"rgba(\" + red + \", \" + green + \", \" + blue + \", \" + alpha$$1 + \")\";\r\n};\r\nvar hslaTemplate = function (_a) {\r\n    var hue = _a.hue, saturation = _a.saturation, lightness = _a.lightness, _b = _a.alpha, alpha$$1 = _b === void 0 ? 1 : _b;\r\n    return \"hsla(\" + hue + \", \" + saturation + \", \" + lightness + \", \" + alpha$$1 + \")\";\r\n};\r\nvar rgbUnit = __assign(__assign({}, number), { transform: function (v) { return Math.round(clampRgbUnit(v)); } });\r\nfunction isColorString(color, colorType) {\r\n    return color.startsWith(colorType) && singleColorRegex.test(color);\r\n}\r\nvar rgba = {\r\n    test: function (v) { return (typeof v === 'string' ? isColorString(v, 'rgb') : isRgba(v)); },\r\n    parse: splitColorValues(['red', 'green', 'blue', 'alpha']),\r\n    transform: function (_a) {\r\n        var red = _a.red, green = _a.green, blue = _a.blue, _b = _a.alpha, alpha$$1 = _b === void 0 ? 1 : _b;\r\n        return rgbaTemplate({\r\n            red: rgbUnit.transform(red),\r\n            green: rgbUnit.transform(green),\r\n            blue: rgbUnit.transform(blue),\r\n            alpha: sanitize(alpha.transform(alpha$$1))\r\n        });\r\n    }\r\n};\r\nvar hsla = {\r\n    test: function (v) { return (typeof v === 'string' ? isColorString(v, 'hsl') : isHsla(v)); },\r\n    parse: splitColorValues(['hue', 'saturation', 'lightness', 'alpha']),\r\n    transform: function (_a) {\r\n        var hue = _a.hue, saturation = _a.saturation, lightness = _a.lightness, _b = _a.alpha, alpha$$1 = _b === void 0 ? 1 : _b;\r\n        return hslaTemplate({\r\n            hue: Math.round(hue),\r\n            saturation: percent.transform(sanitize(saturation)),\r\n            lightness: percent.transform(sanitize(lightness)),\r\n            alpha: sanitize(alpha.transform(alpha$$1))\r\n        });\r\n    }\r\n};\r\nvar hex = __assign(__assign({}, rgba), { test: function (v) { return typeof v === 'string' && isColorString(v, '#'); }, parse: function (v) {\r\n        var r = '';\r\n        var g = '';\r\n        var b = '';\r\n        if (v.length > 4) {\r\n            r = v.substr(1, 2);\r\n            g = v.substr(3, 2);\r\n            b = v.substr(5, 2);\r\n        }\r\n        else {\r\n            r = v.substr(1, 1);\r\n            g = v.substr(2, 1);\r\n            b = v.substr(3, 1);\r\n            r += r;\r\n            g += g;\r\n            b += b;\r\n        }\r\n        return {\r\n            red: parseInt(r, 16),\r\n            green: parseInt(g, 16),\r\n            blue: parseInt(b, 16),\r\n            alpha: 1\r\n        };\r\n    } });\r\nvar color = {\r\n    test: function (v) {\r\n        return (typeof v === 'string' && singleColorRegex.test(v)) ||\r\n            isRgba(v) ||\r\n            isHsla(v);\r\n    },\r\n    parse: function (v) {\r\n        if (rgba.test(v)) {\r\n            return rgba.parse(v);\r\n        }\r\n        else if (hsla.test(v)) {\r\n            return hsla.parse(v);\r\n        }\r\n        else if (hex.test(v)) {\r\n            return hex.parse(v);\r\n        }\r\n        return v;\r\n    },\r\n    transform: function (v) {\r\n        if (isRgba(v)) {\r\n            return rgba.transform(v);\r\n        }\r\n        else if (isHsla(v)) {\r\n            return hsla.transform(v);\r\n        }\r\n        return v;\r\n    }\r\n};\n\nvar COLOR_TOKEN = '${c}';\r\nvar NUMBER_TOKEN = '${n}';\r\nvar convertNumbersToZero = function (v) {\r\n    return typeof v === 'number' ? 0 : v;\r\n};\r\nvar complex = {\r\n    test: function (v) {\r\n        if (typeof v !== 'string' || !isNaN(v))\r\n            return false;\r\n        var numValues = 0;\r\n        var foundNumbers = v.match(floatRegex);\r\n        var foundColors = v.match(colorRegex);\r\n        if (foundNumbers)\r\n            numValues += foundNumbers.length;\r\n        if (foundColors)\r\n            numValues += foundColors.length;\r\n        return numValues > 0;\r\n    },\r\n    parse: function (v) {\r\n        var input = v;\r\n        var parsed = [];\r\n        var foundColors = input.match(colorRegex);\r\n        if (foundColors) {\r\n            input = input.replace(colorRegex, COLOR_TOKEN);\r\n            parsed.push.apply(parsed, foundColors.map(color.parse));\r\n        }\r\n        var foundNumbers = input.match(floatRegex);\r\n        if (foundNumbers) {\r\n            parsed.push.apply(parsed, foundNumbers.map(number.parse));\r\n        }\r\n        return parsed;\r\n    },\r\n    createTransformer: function (prop) {\r\n        var template = prop;\r\n        var token = 0;\r\n        var foundColors = prop.match(colorRegex);\r\n        var numColors = foundColors ? foundColors.length : 0;\r\n        if (foundColors) {\r\n            for (var i = 0; i < numColors; i++) {\r\n                template = template.replace(foundColors[i], COLOR_TOKEN);\r\n                token++;\r\n            }\r\n        }\r\n        var foundNumbers = template.match(floatRegex);\r\n        var numNumbers = foundNumbers ? foundNumbers.length : 0;\r\n        if (foundNumbers) {\r\n            for (var i = 0; i < numNumbers; i++) {\r\n                template = template.replace(foundNumbers[i], NUMBER_TOKEN);\r\n                token++;\r\n            }\r\n        }\r\n        return function (v) {\r\n            var output = template;\r\n            for (var i = 0; i < token; i++) {\r\n                output = output.replace(i < numColors ? COLOR_TOKEN : NUMBER_TOKEN, i < numColors ? color.transform(v[i]) : sanitize(v[i]));\r\n            }\r\n            return output;\r\n        };\r\n    },\r\n    getAnimatableNone: function (target) {\r\n        var parsedTarget = complex.parse(target);\r\n        var targetTransformer = complex.createTransformer(target);\r\n        return targetTransformer(parsedTarget.map(convertNumbersToZero));\r\n    }\r\n};\n\nexport { number, scale, alpha, degrees, percent, progressPercentage, px, vw, vh, rgba, rgbUnit, hsla, hex, color, complex };\n"]},"metadata":{},"sourceType":"module"}