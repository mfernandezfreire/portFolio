{"ast":null,"code":"var _jsxFileName = \"/Volumes/  Disco Externo/DEVS/personalProjects/portfolio/client/src/components/Contact/Contact.js\";\nimport React from \"react\";\nimport Axios from \"axios\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Background from \"../Background/Background\";\nimport LogoContact from \"../LogoContact/LogoContact\";\nimport SocialContactLogo from \"../SocialContactLogo/SocialContactLogo\";\nimport linkedin from \"../../images/Contact/Linkedin.png\";\nimport github from \"../../images/backgroundCode/github.png\";\nimport twitter from \"../../images/Contact/Twitter.png\";\nconst socialContact = [{\n  name: \"linkedin\",\n  image: linkedin,\n  source: \"https://www.linkedin.com/in/manufernandezfreire/\"\n}, {\n  name: \"Git Hub\",\n  image: github,\n  source: \"https://github.com/mfernandezfreire\"\n}, {\n  name: \"Twitter\",\n  image: twitter,\n  source: \"https://twitter.com/manuferfreire\"\n}];\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.subject) {\n    errors.subject = \"Campo Necesario\";\n  } else if (values.subject.length < 5) {\n    errors.subject = \"Al menos 5 cáracteres, no seas tacaño!!\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Campo Necesario\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  if (!values.message) {\n    errors.message = \"Required\";\n  } else if (values.message.length < 10) {\n    errors.message = \"Al menos 10 caracteres, no seas tacaño!!\";\n  }\n\n  return errors;\n};\n\nconst Contact = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Contact container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Background, {\n    type: \"contact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-4 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Contacta Conmigo\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LogoContact, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\"\n    },\n    validationSchema: Yup.object({\n      firstName: Yup.string().max(15, \"Must be 15 characters or less\").required(\"Required\"),\n      lastName: Yup.string().max(20, \"Must be 20 characters or less\").required(\"Required\"),\n      email: Yup.string().email(\"Invalid email address\").required(\"Required\")\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, formik => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    id: \"firstName\"\n  }, formik.getFieldProps(\"firstName\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  })), formik.touched.firstName && formik.errors.firstName ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, formik.errors.firstName) : null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    id: \"lastName\"\n  }, formik.getFieldProps(\"lastName\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  })), formik.touched.lastName && formik.errors.lastName ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, formik.errors.lastName) : null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    id: \"email\"\n  }, formik.getFieldProps(\"email\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  })), formik.touched.email && formik.errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, formik.errors.email) : null, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, socialContact.map(social => /*#__PURE__*/React.createElement(SocialContactLogo, {\n    name: social.name,\n    image: social.image,\n    source: social.source,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center mb-0\",\n    style: {\n      fontSize: \"1.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, \"Manuel Fernandez Freire \\xA9\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center\",\n    style: {\n      fontSize: \"1.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"2020\"))));\n};\n\nexport default Contact;","map":{"version":3,"sources":["/Volumes/  Disco Externo/DEVS/personalProjects/portfolio/client/src/components/Contact/Contact.js"],"names":["React","Axios","Formik","Yup","Background","LogoContact","SocialContactLogo","linkedin","github","twitter","socialContact","name","image","source","validate","values","errors","subject","length","email","test","message","Contact","firstName","lastName","object","string","max","required","setSubmitting","setTimeout","alert","JSON","stringify","formik","handleSubmit","getFieldProps","touched","map","social","fontSize"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Axios from \"axios\";\n\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport Background from \"../Background/Background\";\nimport LogoContact from \"../LogoContact/LogoContact\";\nimport SocialContactLogo from \"../SocialContactLogo/SocialContactLogo\";\n\nimport linkedin from \"../../images/Contact/Linkedin.png\";\nimport github from \"../../images/backgroundCode/github.png\";\nimport twitter from \"../../images/Contact/Twitter.png\";\n\nconst socialContact = [\n  {\n    name: \"linkedin\",\n    image: linkedin,\n    source: \"https://www.linkedin.com/in/manufernandezfreire/\",\n  },\n  {\n    name: \"Git Hub\",\n    image: github,\n    source: \"https://github.com/mfernandezfreire\",\n  },\n  {\n    name: \"Twitter\",\n    image: twitter,\n    source: \"https://twitter.com/manuferfreire\",\n  },\n];\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.subject) {\n    errors.subject = \"Campo Necesario\";\n  } else if (values.subject.length < 5) {\n    errors.subject = \"Al menos 5 cáracteres, no seas tacaño!!\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Campo Necesario\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  if (!values.message) {\n    errors.message = \"Required\";\n  } else if (values.message.length < 10) {\n    errors.message = \"Al menos 10 caracteres, no seas tacaño!!\";\n  }\n\n  return errors;\n};\n\nconst Contact = () => {\n  return (\n    <div className=\"Contact container-fluid\">\n      <Background type={\"contact\"} />\n      <h1 className=\"display-4 text-center\">Contacta Conmigo</h1>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-6 mb-5\">\n          <LogoContact />\n        </div>\n      </div>\n      <Formik\n        initialValues={{ firstName: \"\", lastName: \"\", email: \"\" }}\n        validationSchema={Yup.object({\n          firstName: Yup.string()\n            .max(15, \"Must be 15 characters or less\")\n            .required(\"Required\"),\n          lastName: Yup.string()\n            .max(20, \"Must be 20 characters or less\")\n            .required(\"Required\"),\n          email: Yup.string()\n            .email(\"Invalid email address\")\n            .required(\"Required\"),\n        })}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n        }}\n      >\n        {(formik) => (\n          <form onSubmit={formik.handleSubmit}>\n            <label htmlFor=\"firstName\">First Name</label>\n            <input id=\"firstName\" {...formik.getFieldProps(\"firstName\")} />\n            {formik.touched.firstName && formik.errors.firstName ? (\n              <div>{formik.errors.firstName}</div>\n            ) : null}\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input id=\"lastName\" {...formik.getFieldProps(\"lastName\")} />\n            {formik.touched.lastName && formik.errors.lastName ? (\n              <div>{formik.errors.lastName}</div>\n            ) : null}\n            <label htmlFor=\"email\">Email Address</label>\n            <input id=\"email\" {...formik.getFieldProps(\"email\")} />\n            {formik.touched.email && formik.errors.email ? (\n              <div>{formik.errors.email}</div>\n            ) : null}\n            <button type=\"submit\">Submit</button>\n          </form>\n        )}\n      </Formik>\n      <div className=\"row justify-content-center\">\n        {socialContact.map((social) => (\n          <SocialContactLogo\n            name={social.name}\n            image={social.image}\n            source={social.source}\n          />\n        ))}\n      </div>\n      <div className=\"row mt-5\">\n        <div className=\"col-12\">\n          <p className=\"text-center mb-0\" style={{ fontSize: \"1.5rem\" }}>\n            Manuel Fernandez Freire ©\n          </p>\n          <p className=\"text-center\" style={{ fontSize: \"1.5rem\" }}>\n            2020\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}